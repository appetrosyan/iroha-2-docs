import{_ as t,o as e,c as a,Q as i}from"./chunks/framework.c932f925.js";const o="/iroha-2-docs/assets/data_filters.cb338184.png",r="/iroha-2-docs/assets/entity_filters.375090e8.png",F=JSON.parse('{"title":"Filters","description":"","frontmatter":{},"headers":[],"relativePath":"guide/blockchain/filters.md","lastUpdated":1682419675000}'),s={name:"guide/blockchain/filters.md"},c=i('<h1 id="filters" tabindex="-1">Filters <a class="header-anchor" href="#filters" aria-label="Permalink to &quot;Filters&quot;">​</a></h1><p>Iroha uses <em>filter-map paradigm</em> to monitor <a href="./events.html">events</a>. Let&#39;s look at different types of filters that can be used in Iroha.</p><h2 id="data-filters" tabindex="-1">Data Filters <a class="header-anchor" href="#data-filters" aria-label="Permalink to &quot;Data Filters&quot;">​</a></h2><p>A data filter is a tuple with a single variant, which is a <code>FilterOpt</code> of an <code>EntityFilter</code>:</p><p><img src="'+o+'" alt="Untitled"></p><p><code>FilterOpt</code> stands for Optional Filter. It can either <code>AcceptAll</code> or accept <code>BySome</code> of another <code>Filter</code>. An <code>EntityFilter</code> is a filter that matches events produced by a certain type entity, e.g. by account or domain.</p><p>Here is the list of <code>EntityFilter</code>s in Iroha:</p><p><img src="'+r+'" alt="Untitled"></p>',8),l=[c];function n(d,p,h,_,f,m){return e(),a("div",null,l)}const b=t(s,[["render",n]]);export{F as __pageData,b as default};
